/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as ProfileImport } from './routes/profile'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as InstructorMyClassroomsIndexImport } from './routes/instructor/my-classrooms/index'
import { Route as InstructorMyClassroomsClassroomIdImport } from './routes/instructor/my-classrooms/$classroomId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = ForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InstructorMyClassroomsIndexRoute =
  InstructorMyClassroomsIndexImport.update({
    id: '/instructor/my-classrooms/',
    path: '/instructor/my-classrooms/',
    getParentRoute: () => rootRoute,
  } as any)

const InstructorMyClassroomsClassroomIdRoute =
  InstructorMyClassroomsClassroomIdImport.update({
    id: '/instructor/my-classrooms/$classroomId',
    path: '/instructor/my-classrooms/$classroomId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/instructor/my-classrooms/$classroomId': {
      id: '/instructor/my-classrooms/$classroomId'
      path: '/instructor/my-classrooms/$classroomId'
      fullPath: '/instructor/my-classrooms/$classroomId'
      preLoaderRoute: typeof InstructorMyClassroomsClassroomIdImport
      parentRoute: typeof rootRoute
    }
    '/instructor/my-classrooms/': {
      id: '/instructor/my-classrooms/'
      path: '/instructor/my-classrooms'
      fullPath: '/instructor/my-classrooms'
      preLoaderRoute: typeof InstructorMyClassroomsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/instructor/my-classrooms/$classroomId': typeof InstructorMyClassroomsClassroomIdRoute
  '/instructor/my-classrooms': typeof InstructorMyClassroomsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/instructor/my-classrooms/$classroomId': typeof InstructorMyClassroomsClassroomIdRoute
  '/instructor/my-classrooms': typeof InstructorMyClassroomsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/instructor/my-classrooms/$classroomId': typeof InstructorMyClassroomsClassroomIdRoute
  '/instructor/my-classrooms/': typeof InstructorMyClassroomsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/forgot-password'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/instructor/my-classrooms/$classroomId'
    | '/instructor/my-classrooms'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/forgot-password'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/instructor/my-classrooms/$classroomId'
    | '/instructor/my-classrooms'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/forgot-password'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/instructor/my-classrooms/$classroomId'
    | '/instructor/my-classrooms/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  ProfileRoute: typeof ProfileRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  InstructorMyClassroomsClassroomIdRoute: typeof InstructorMyClassroomsClassroomIdRoute
  InstructorMyClassroomsIndexRoute: typeof InstructorMyClassroomsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  ProfileRoute: ProfileRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  InstructorMyClassroomsClassroomIdRoute:
    InstructorMyClassroomsClassroomIdRoute,
  InstructorMyClassroomsIndexRoute: InstructorMyClassroomsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/forgot-password",
        "/profile",
        "/signin",
        "/signup",
        "/instructor/my-classrooms/$classroomId",
        "/instructor/my-classrooms/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/instructor/my-classrooms/$classroomId": {
      "filePath": "instructor/my-classrooms/$classroomId.tsx"
    },
    "/instructor/my-classrooms/": {
      "filePath": "instructor/my-classrooms/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
