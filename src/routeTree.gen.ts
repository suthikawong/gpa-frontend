/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as SigninImport } from './routes/signin'
import { Route as ProfileImport } from './routes/profile'
import { Route as ForgotPasswordImport } from './routes/forgot-password'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as StudentIndexImport } from './routes/student/index'
import { Route as StudentAssessmentIndexImport } from './routes/student/assessment/index'
import { Route as InstructorAssessmentIndexImport } from './routes/instructor/assessment/index'
import { Route as StudentAssessmentAssessmentIdImport } from './routes/student/assessment/$assessmentId'
import { Route as InstructorAssessmentAssessmentIdIndexImport } from './routes/instructor/assessment/$assessmentId/index'
import { Route as InstructorAssessmentAssessmentIdGroupGroupIdIndexImport } from './routes/instructor/assessment/$assessmentId/group/$groupId/index'
import { Route as InstructorAssessmentAssessmentIdGroupGroupIdMemberImport } from './routes/instructor/assessment/$assessmentId/group/$groupId/member'
import { Route as InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdImport } from './routes/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const SigninRoute = SigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const ForgotPasswordRoute = ForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StudentIndexRoute = StudentIndexImport.update({
  id: '/student/',
  path: '/student/',
  getParentRoute: () => rootRoute,
} as any)

const StudentAssessmentIndexRoute = StudentAssessmentIndexImport.update({
  id: '/student/assessment/',
  path: '/student/assessment/',
  getParentRoute: () => rootRoute,
} as any)

const InstructorAssessmentIndexRoute = InstructorAssessmentIndexImport.update({
  id: '/instructor/assessment/',
  path: '/instructor/assessment/',
  getParentRoute: () => rootRoute,
} as any)

const StudentAssessmentAssessmentIdRoute =
  StudentAssessmentAssessmentIdImport.update({
    id: '/student/assessment/$assessmentId',
    path: '/student/assessment/$assessmentId',
    getParentRoute: () => rootRoute,
  } as any)

const InstructorAssessmentAssessmentIdIndexRoute =
  InstructorAssessmentAssessmentIdIndexImport.update({
    id: '/instructor/assessment/$assessmentId/',
    path: '/instructor/assessment/$assessmentId/',
    getParentRoute: () => rootRoute,
  } as any)

const InstructorAssessmentAssessmentIdGroupGroupIdIndexRoute =
  InstructorAssessmentAssessmentIdGroupGroupIdIndexImport.update({
    id: '/instructor/assessment/$assessmentId/group/$groupId/',
    path: '/instructor/assessment/$assessmentId/group/$groupId/',
    getParentRoute: () => rootRoute,
  } as any)

const InstructorAssessmentAssessmentIdGroupGroupIdMemberRoute =
  InstructorAssessmentAssessmentIdGroupGroupIdMemberImport.update({
    id: '/instructor/assessment/$assessmentId/group/$groupId/member',
    path: '/instructor/assessment/$assessmentId/group/$groupId/member',
    getParentRoute: () => rootRoute,
  } as any)

const InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdRoute =
  InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdImport.update(
    {
      id: '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId',
      path: '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId',
      getParentRoute: () => rootRoute,
    } as any,
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/student/': {
      id: '/student/'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/assessment/$assessmentId': {
      id: '/student/assessment/$assessmentId'
      path: '/student/assessment/$assessmentId'
      fullPath: '/student/assessment/$assessmentId'
      preLoaderRoute: typeof StudentAssessmentAssessmentIdImport
      parentRoute: typeof rootRoute
    }
    '/instructor/assessment/': {
      id: '/instructor/assessment/'
      path: '/instructor/assessment'
      fullPath: '/instructor/assessment'
      preLoaderRoute: typeof InstructorAssessmentIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/assessment/': {
      id: '/student/assessment/'
      path: '/student/assessment'
      fullPath: '/student/assessment'
      preLoaderRoute: typeof StudentAssessmentIndexImport
      parentRoute: typeof rootRoute
    }
    '/instructor/assessment/$assessmentId/': {
      id: '/instructor/assessment/$assessmentId/'
      path: '/instructor/assessment/$assessmentId'
      fullPath: '/instructor/assessment/$assessmentId'
      preLoaderRoute: typeof InstructorAssessmentAssessmentIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/instructor/assessment/$assessmentId/group/$groupId/member': {
      id: '/instructor/assessment/$assessmentId/group/$groupId/member'
      path: '/instructor/assessment/$assessmentId/group/$groupId/member'
      fullPath: '/instructor/assessment/$assessmentId/group/$groupId/member'
      preLoaderRoute: typeof InstructorAssessmentAssessmentIdGroupGroupIdMemberImport
      parentRoute: typeof rootRoute
    }
    '/instructor/assessment/$assessmentId/group/$groupId/': {
      id: '/instructor/assessment/$assessmentId/group/$groupId/'
      path: '/instructor/assessment/$assessmentId/group/$groupId'
      fullPath: '/instructor/assessment/$assessmentId/group/$groupId'
      preLoaderRoute: typeof InstructorAssessmentAssessmentIdGroupGroupIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId': {
      id: '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId'
      path: '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId'
      fullPath: '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId'
      preLoaderRoute: typeof InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/student': typeof StudentIndexRoute
  '/student/assessment/$assessmentId': typeof StudentAssessmentAssessmentIdRoute
  '/instructor/assessment': typeof InstructorAssessmentIndexRoute
  '/student/assessment': typeof StudentAssessmentIndexRoute
  '/instructor/assessment/$assessmentId': typeof InstructorAssessmentAssessmentIdIndexRoute
  '/instructor/assessment/$assessmentId/group/$groupId/member': typeof InstructorAssessmentAssessmentIdGroupGroupIdMemberRoute
  '/instructor/assessment/$assessmentId/group/$groupId': typeof InstructorAssessmentAssessmentIdGroupGroupIdIndexRoute
  '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId': typeof InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/student': typeof StudentIndexRoute
  '/student/assessment/$assessmentId': typeof StudentAssessmentAssessmentIdRoute
  '/instructor/assessment': typeof InstructorAssessmentIndexRoute
  '/student/assessment': typeof StudentAssessmentIndexRoute
  '/instructor/assessment/$assessmentId': typeof InstructorAssessmentAssessmentIdIndexRoute
  '/instructor/assessment/$assessmentId/group/$groupId/member': typeof InstructorAssessmentAssessmentIdGroupGroupIdMemberRoute
  '/instructor/assessment/$assessmentId/group/$groupId': typeof InstructorAssessmentAssessmentIdGroupGroupIdIndexRoute
  '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId': typeof InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/student/': typeof StudentIndexRoute
  '/student/assessment/$assessmentId': typeof StudentAssessmentAssessmentIdRoute
  '/instructor/assessment/': typeof InstructorAssessmentIndexRoute
  '/student/assessment/': typeof StudentAssessmentIndexRoute
  '/instructor/assessment/$assessmentId/': typeof InstructorAssessmentAssessmentIdIndexRoute
  '/instructor/assessment/$assessmentId/group/$groupId/member': typeof InstructorAssessmentAssessmentIdGroupGroupIdMemberRoute
  '/instructor/assessment/$assessmentId/group/$groupId/': typeof InstructorAssessmentAssessmentIdGroupGroupIdIndexRoute
  '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId': typeof InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/forgot-password'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/student'
    | '/student/assessment/$assessmentId'
    | '/instructor/assessment'
    | '/student/assessment'
    | '/instructor/assessment/$assessmentId'
    | '/instructor/assessment/$assessmentId/group/$groupId/member'
    | '/instructor/assessment/$assessmentId/group/$groupId'
    | '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/forgot-password'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/student'
    | '/student/assessment/$assessmentId'
    | '/instructor/assessment'
    | '/student/assessment'
    | '/instructor/assessment/$assessmentId'
    | '/instructor/assessment/$assessmentId/group/$groupId/member'
    | '/instructor/assessment/$assessmentId/group/$groupId'
    | '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/forgot-password'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/student/'
    | '/student/assessment/$assessmentId'
    | '/instructor/assessment/'
    | '/student/assessment/'
    | '/instructor/assessment/$assessmentId/'
    | '/instructor/assessment/$assessmentId/group/$groupId/member'
    | '/instructor/assessment/$assessmentId/group/$groupId/'
    | '/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  ProfileRoute: typeof ProfileRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  StudentIndexRoute: typeof StudentIndexRoute
  StudentAssessmentAssessmentIdRoute: typeof StudentAssessmentAssessmentIdRoute
  InstructorAssessmentIndexRoute: typeof InstructorAssessmentIndexRoute
  StudentAssessmentIndexRoute: typeof StudentAssessmentIndexRoute
  InstructorAssessmentAssessmentIdIndexRoute: typeof InstructorAssessmentAssessmentIdIndexRoute
  InstructorAssessmentAssessmentIdGroupGroupIdMemberRoute: typeof InstructorAssessmentAssessmentIdGroupGroupIdMemberRoute
  InstructorAssessmentAssessmentIdGroupGroupIdIndexRoute: typeof InstructorAssessmentAssessmentIdGroupGroupIdIndexRoute
  InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdRoute: typeof InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  ProfileRoute: ProfileRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  StudentIndexRoute: StudentIndexRoute,
  StudentAssessmentAssessmentIdRoute: StudentAssessmentAssessmentIdRoute,
  InstructorAssessmentIndexRoute: InstructorAssessmentIndexRoute,
  StudentAssessmentIndexRoute: StudentAssessmentIndexRoute,
  InstructorAssessmentAssessmentIdIndexRoute:
    InstructorAssessmentAssessmentIdIndexRoute,
  InstructorAssessmentAssessmentIdGroupGroupIdMemberRoute:
    InstructorAssessmentAssessmentIdGroupGroupIdMemberRoute,
  InstructorAssessmentAssessmentIdGroupGroupIdIndexRoute:
    InstructorAssessmentAssessmentIdGroupGroupIdIndexRoute,
  InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdRoute:
    InstructorAssessmentAssessmentIdGroupGroupIdPeerRatingScoringComponentScoringComponentIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/forgot-password",
        "/profile",
        "/signin",
        "/signup",
        "/student/",
        "/student/assessment/$assessmentId",
        "/instructor/assessment/",
        "/student/assessment/",
        "/instructor/assessment/$assessmentId/",
        "/instructor/assessment/$assessmentId/group/$groupId/member",
        "/instructor/assessment/$assessmentId/group/$groupId/",
        "/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/forgot-password": {
      "filePath": "forgot-password.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/signin": {
      "filePath": "signin.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/student/": {
      "filePath": "student/index.tsx"
    },
    "/student/assessment/$assessmentId": {
      "filePath": "student/assessment/$assessmentId.tsx"
    },
    "/instructor/assessment/": {
      "filePath": "instructor/assessment/index.tsx"
    },
    "/student/assessment/": {
      "filePath": "student/assessment/index.tsx"
    },
    "/instructor/assessment/$assessmentId/": {
      "filePath": "instructor/assessment/$assessmentId/index.tsx"
    },
    "/instructor/assessment/$assessmentId/group/$groupId/member": {
      "filePath": "instructor/assessment/$assessmentId/group/$groupId/member.tsx"
    },
    "/instructor/assessment/$assessmentId/group/$groupId/": {
      "filePath": "instructor/assessment/$assessmentId/group/$groupId/index.tsx"
    },
    "/instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId": {
      "filePath": "instructor/assessment/$assessmentId/group/$groupId/peer-rating/scoring-component/$scoringComponentId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
